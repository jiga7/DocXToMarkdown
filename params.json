{"name":"DocXToMarkdown","tagline":"App that converts DocX documents to markdown format.","body":"DocXToMarkdown\r\n==============\r\n\r\nA proof-on-concept app that converts DocX documents to markdown format.\r\nBuild upon an excellent library: [DocX](http://docx.codeplex.com).\r\n\r\n# Installation #\r\n\r\nDownload latest release [archive file](https://github.com/soneta/DocXToMarkdown/releases/download/v0.1/DocXToMarkdown.zip). It contains all necessary files. It must be run from command line.\r\n\r\n# Usage #\r\n\r\nThe conversion process contains two phases:\r\n\r\n### Analyze phase ###\r\n\r\n   You must run **DocXToMarkdown.exe** with the */analyze* parameter,\r\neg:\r\n\r\n`DocXToMarkdown.exe /analyze CV.docx`\r\n\r\nThis call will produce the **CV.json** file, which contains all the\r\ndifferent styles that document has. This is the simple JSON object,\r\nwhere keys are the styles from document and values are markdown\r\nelements, that the concrete style will be convert to.\r\n\r\nThe file looks like this (keys are from polish version of Word 2013):\r\n\r\n```json\r\n{  \r\n    \"Nagwek1\": \"Header1\",  \r\n    \"Nagwek2\": \"Header2\",  \r\n    \"ordered_lista1\": \"OrderedList\",  \r\n}  \r\n```\r\n\r\nAvaliable converters: \r\n\r\n * Header1\r\n * Header2\r\n * Header3\r\n * Header4\r\n * Header5\r\n * Header6\r\n * P\r\n * OrderedList\r\n * UnorderedList\r\n\r\nApplication will try to guess which style should be assigned to which\r\nconverter, based on number and type, but you need to check its guess.\r\n\r\nWhen converters are assigned, the next phase is actual convert.\r\n\r\n### Convert phase ###\r\n\r\n   You must run **DocXToMarkdown.exe** with the */convert* parameter,\r\neg:\r\n\r\n`DocXToMarkdown.exe /convert CV.docx`\r\n\r\nIt will produce multiple files:\r\n\r\n * CV.md - actual markdown code\r\n * CV\\_images/\\*.jpg - directory that contains images\r\n\r\nThats all :)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}